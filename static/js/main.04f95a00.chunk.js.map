{"version":3,"sources":["svg/logo.svg","svg/login.svg","svg/register.svg","react-auth0-spa.js","utils/simpleLogin.js","Components/layout/Navbar.js","Components/layout/Footer.js","Components/me/GoogleData.js","Components/me/Repository.js","Components/me/Repositories.js","Components/me/GithubList.js","Components/me/Me.js","context/alerts/alertContext.js","Components/auth/SignIn.js","Components/auth/SignUp.js","context/alerts/alertReducer.js","types/index.js","context/alerts/alertState.js","utils/history.js","Components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","isLogin","localStorage","getItem","Navbar","className","to","src","logo","alt","width","id","onClick","removeItem","Footer","Google","picture","name","email","userGoogle","setUserGoogle","response","setResponse","responseGoogle","res","responseProfile","profileObj","imageUrl","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Repository","repository","aria-disabled","RepositoriesList","repositories","map","key","Github","MySwal","withReactContent","Swal","username","setSearch","results","setResults","readApi","url","fetch","json","result","message","fire","onOpen","clickConfirm","then","onSubmit","e","preventDefault","trim","type","placeholder","onChange","target","role","Repositories","Me","path","component","alertContext","SignIn","props","AlertContext","alert","showAlert","password","saveUser","useHistory","login","localUser","JSON","parse","setItem","push","category","msg","SignUp","firstname","lastname","retypePassword","register","length","stringify","state","action","payload","AlertState","useReducer","alertReducer","dispatch","setTimeout","createBrowserHistory","PrivateRoute","Component","rest","targetUrl","fn","render","App","basename","Boolean","hostname","match","ReactDOM","domain","config","client_id","redirect_uri","origin","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.04f95a00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.979bfce6.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.0b905b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/register.8f5af410.svg\";","import React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\"; \r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\") &&\r\n          window.location.search.includes(\"state=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  \r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};","const TOKEN_KEY = 'jwt';\r\n\r\nexport const loginApp = () => {\r\n    localStorage.setItem(TOKEN_KEY, 'TestLogin');\r\n}\r\n\r\nexport const logoutApp = () => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport const isLogin = () => {\r\n    if (localStorage.getItem(TOKEN_KEY)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import React from \"react\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../svg/logo.svg\";\r\nimport { logoutApp, isLogin } from \"../../utils/simpleLogin\";\r\n\r\nconst Navbar = () => {\r\n  const { isAuthenticated, logout } = useAuth0();\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark mb-4\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/me/google\">\r\n          <img src={logo} alt=\"logo\" width=\"40px\" />\r\n        </Link>\r\n        <div className=\"row justify-content-between\" id=\"navbarNav\">\r\n          {(isAuthenticated || isLogin) && (\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item pr-2\">\r\n                <Link className=\"nav-link\" to=\"/me/google\">\r\n                  Google\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item pr-2\">\r\n                <Link className=\"nav-link\" to=\"/me/github\">\r\n                  Github\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n          <ul className=\"navbar-nav\">\r\n            {(isAuthenticated || isLogin) &&\r\n              (isAuthenticated ? (\r\n                <li className=\"nav-item  pr-2\">\r\n                  {isAuthenticated && (\r\n                    <Link className=\"nav-link\" onClick={() => logout()}>\r\n                      Log out\r\n                    </Link>\r\n                  )}\r\n                </li>\r\n              ) : (\r\n                <li className=\"nav-item  pr-2\">\r\n                  {isLogin && (\r\n                    <Link\r\n                      className=\"nav-link\"\r\n                      onClick={() => logoutApp()}\r\n                      to=\"/buildTest\"\r\n                    >\r\n                      Log out\r\n                    </Link>\r\n                  )}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"page-footer\">\r\n        <div className=\"footer-copyright text-center py-4\">© 2020 Copyright: BuildTest\r\n        </div>\r\n      </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport GoogleLogin from \"react-google-login\";\r\n\r\nconst Google = () => {\r\n  const [userGoogle, setUserGoogle] = useState({\r\n    picture: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [response, setResponse] = useState(false);\r\n\r\n  const { picture, name, email } = userGoogle;\r\n\r\n  useEffect(() => {\r\n    if (response) {\r\n      setUserGoogle(userGoogle);\r\n    }\r\n  }, [response]);\r\n\r\n  const responseGoogle = (res) => {\r\n    let responseProfile = {\r\n      picture: res.profileObj.imageUrl,\r\n      name: res.profileObj.name,\r\n      email: res.profileObj.email,\r\n    };\r\n\r\n    setUserGoogle(responseProfile);\r\n    setResponse(true);\r\n  };\r\n\r\n  const { loading, user } = useAuth0();\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading || !user ? (\r\n        <div>\r\n          <h1 className=\"display-4 col-lg-12\">Google Data</h1>\r\n          <div className={`col-lg-12 ${response ? \"hide_profile\" : \"\"}`}>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n              <div className=\"container\">\r\n                <p className=\"lead\">\r\n                  It seems that you did not log in with google, it is necessary\r\n                  to show you your information, press the button and wait ...\r\n                </p>\r\n                <GoogleLogin\r\n                  clientId=\"397062016864-us5mjm4b0jpbf4f95dr9uqd79s0dkmas.apps.googleusercontent.com\"\r\n                  buttonText=\"Login\"\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle}\r\n                  cookiePolicy={\"single_host_origin\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n           <div className={`card col-10 col-sm-6 col-lg-3 ${response ? \"\" : \"hide_profile\"}`}>\r\n            <img src={picture} className=\"card-img-top\" alt=\"profile\"/>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{name}</h5>\r\n                <p className=\"card-text\">{email}</p>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      ) : (\r\n        <div  className=\"card col-10 col-sm-6 col-lg-3\">\r\n          <img src={user.picture} className=\"card-img-top\" alt=\"profile\"/>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{user.name}</h5>\r\n                <p className=\"card-text\">{user.email}</p>\r\n              </div>\r\n          </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Google;\r\n","import React from 'react'\r\n\r\nconst Repository = ({repository}) => {\r\n    const {name} = repository;\r\n    return (\r\n        <li className=\"list-group-item\" aria-disabled=\"true\">\r\n            {name}\r\n        </li>\r\n    );\r\n}\r\n \r\nexport default Repository;","import React from 'react'\r\nimport Repository from './Repository';\r\n\r\nconst RepositoriesList = ({repositories}) => {\r\n    return (\r\n        <div className=\"repositories\">\r\n            {repositories.map((repository) => (\r\n                <Repository key={repository.id} repository={repository}/>\r\n            ))} \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default RepositoriesList;","import React, { useState, useEffect } from \"react\";\r\nimport RepositoriesList from '../me/Repositories';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst Github = () => {\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n    const [search, setSearch] = useState({\r\n    username : ''\r\n    });\r\n    const {username} = search;\r\n\r\n    const [response, setResponse] = useState(false);\r\n    const [results, setResults] = useState([]);\r\n\r\n    //  useEffect(() => {\r\n    //     readApi();\r\n    // }, [response])\r\n\r\n    useEffect(() => {\r\n      readApi();\r\n  }, [response])\r\n\r\n    const handleChange = e => {\r\n        setSearch({\r\n            username,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const readApi = async () => {\r\n        if(response){\r\n            const url = `https://api.github.com/users/${username}/repos`;\r\n            const res = await fetch(url);\r\n            const result = await res.json();\r\n            if(result.message === \"Not Found\"){\r\n              MySwal.fire({\r\n                onOpen: () => {\r\n                  MySwal.clickConfirm()\r\n                }\r\n              }).then(() => {\r\n                return MySwal.fire(<p>Repository not found.</p>)\r\n              })\r\n              setResponse(false);\r\n              return;\r\n            }\r\n            setResults(result);\r\n            setResponse(false);\r\n        }\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(username.trim()===''){\r\n          MySwal.fire({\r\n            onOpen: () => {\r\n              MySwal.clickConfirm()\r\n            }\r\n          }).then(() => {\r\n            return MySwal.fire(<p>Write a repository name to search...</p>)\r\n          })\r\n            return;\r\n        }\r\n        setResponse(true);\r\n    }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n    <h1 className=\"display-4 col-lg-12\">Github Repositories</h1>\r\n      <div className=\"col-lg-6\">\r\n        <form className=\"form-row\" onSubmit={handleSubmit}>\r\n          <div className=\"col-lg-12\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"Github Username\"\r\n              value={username}\r\n              onChange={handleChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-block b-grape mt-2\">\r\n            Search!\r\n          </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"col-lg-6\">\r\n        <ul className=\"list-group\">\r\n            { !response ?  <RepositoriesList repositories={results}/> \r\n            :\r\n            <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            </div>\r\n             }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Github;\r\n","import React from 'react';\r\nimport Navbar from '../layout/Navbar';\r\nimport Footer from '../layout/Footer';\r\nimport Google from './GoogleData';\r\nimport Github from './GithubList';\r\nimport { Route} from 'react-router-dom';\r\n\r\nconst Me = () => {\r\n    return (\r\n        <div className=\"container-fluid p-0\">\r\n            <Navbar/>\r\n            <div className=\"container\">\r\n              <Route path='/me/google' component={Google}/>\r\n              <Route path='/me/github' component={Github}/>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Me;","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport login from \"../../svg/login.svg\";\r\nimport AlertContext from \"../../context/alerts/alertContext\";\r\nimport { loginApp } from \"../../utils/simpleLogin\";\r\n\r\nconst SignIn = (props) => {\r\n  //Context\r\n  const alertContext = useContext(AlertContext);\r\n  const { alert, showAlert } = alertContext;\r\n\r\n  //State\r\n  const [user, saveUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  //get from user\r\n  const { email, password } = user;\r\n\r\n  //history to route\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) => {\r\n    saveUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //validation\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      showAlert(\"Email and password are required\", \"alert-error\");\r\n      return;\r\n    }\r\n\r\n    let localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (localUser === null) {\r\n      showAlert(\"Oops! you need to register before starting\", \"alert-error\");\r\n      return;\r\n    }\r\n\r\n    if (email === localUser.email && password === localUser.password) {\r\n      //use a simple login\r\n      loginApp();\r\n      //redirect\r\n      history.push(\"/me/google\");\r\n    } else {\r\n      showAlert(\r\n        \"Email and password are not valid, Try again...\",\r\n        \"alert-error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid h-100\">\r\n      <div className=\"row h-100\">\r\n        <div className=\"col-lg-6 background-light d-flex align-middle justify-content-center\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <img src={login} alt=\"login\" width=\"80%\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 background-dark d-flex justify-content-center\">\r\n          <div className=\"col-lg-8 p-4 align-self-center\">\r\n            <h3 className=\"mb-4\">Welcome!</h3>\r\n            <p className=\"mb-4 font-weight-light\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt\r\n              magnam officiis.\r\n            </p>\r\n            <p className=\"t-grape mb-2\"> Login </p>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={onChange}\r\n                  value={email}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              {alert ? (\r\n                <div className={`alert ${alert.category}`}>{alert.msg}</div>\r\n              ) : null}\r\n              <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn mb-2 b-grape\">\r\n                  Sign In\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <div>\r\n              <p className=\"mb-0 col-lg-12 p-0\">\r\n                Or login with\r\n                <Link className=\"google\" to=\"/me/google\">\r\n                  {\" \"}\r\n                  Google\r\n                </Link>\r\n              </p>\r\n              <p className=\"mb-0 col-lg-12 p-0\">\r\n                Don't you have an account? <Link to={\"/signup\"}> Sign Up </Link>{\" \"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AlertContext from \"../../context/alerts/alertContext\";\r\nimport register from \"../../svg/register.svg\";\r\n\r\nconst SignUp = () => {\r\n  //Context\r\n  const alertContext = useContext(AlertContext);\r\n  const { alert, showAlert } = alertContext;\r\n\r\n  //State\r\n  const [user, saveUser] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    retypePassword: \"\",\r\n  });\r\n\r\n  //get from user\r\n  const { firstname, lastname, email, password, retypePassword } = user;\r\n\r\n  //history to route\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) => {\r\n    saveUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //validations\r\n    if (\r\n      firstname.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      retypePassword.trim() === \"\"\r\n    ) {\r\n      showAlert(\r\n        \"First name, email, password and retype password are required\",\r\n        \"alert-error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      showAlert(\"Password must be min 6 characters\", \"alert-error\");\r\n      return;\r\n    }\r\n\r\n    if (password !== retypePassword) {\r\n      showAlert(\"Make sure your passwords match\", \"alert-error\");\r\n      return;\r\n    }\r\n\r\n    //save in localstorage\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n    //go to login\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid h-100\">\r\n      <div className=\"row h-100\">\r\n        <div className=\"col-lg-6 background-light d-flex align-middle justify-content-center\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <img src={register} alt=\"register\" width=\"80%\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 background-dark d-flex justify-content-center\">\r\n          <div className=\"col-lg-8 p-4 align-self-center\">\r\n            <h3 className=\"mb-4\">Lorem ipsum, dolor sit amet consectetur.</h3>\r\n            <p className=\"mb-4 font-weight-light\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt\r\n              magnam officiis.\r\n            </p>\r\n            <p className=\"t-grape mb-2\"> Sign Up </p>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"firstname\"\r\n                  name=\"firstname\"\r\n                  onChange={onChange}\r\n                  value={firstname}\r\n                  placeholder=\"First Name\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"lastname\"\r\n                  name=\"lastname\"\r\n                  onChange={onChange}\r\n                  value={lastname}\r\n                  placeholder=\"Last Name\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={onChange}\r\n                  value={email}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"retypePassword\"\r\n                  name=\"retypePassword\"\r\n                  onChange={onChange}\r\n                  value={retypePassword}\r\n                  placeholder=\"Retype Password\"\r\n                />\r\n              </div>\r\n              {alert ? (\r\n                <div className={`alert ${alert.category}`}>{alert.msg}</div>\r\n              ) : null}\r\n              <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn b-grape mb-2\">\r\n                  Create Account\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <p className=\"mb-0 col-lg-12 p-0\">\r\n              {\" \"}\r\n              Already have an account? <Link to={\"/buildTest\"}>Sign In</Link>{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { SHOW_ALERT, HIDE_ALERT } from '../../types/index';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case SHOW_ALERT:\r\n            return {\r\n                alert: action.payload\r\n            }\r\n\r\n        case HIDE_ALERT:\r\n            return{\r\n                alert:null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';","import React, { useReducer } from 'react';\r\nimport alertReducer from './alertReducer';\r\nimport alertContext from './alertContext';\r\nimport { SHOW_ALERT, HIDE_ALERT } from '../../types/index';\r\n\r\nconst AlertState = props => {\r\n    const initialState = {\r\n        alert: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n    //Functions\r\n    const showAlert = (msg, category) => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {\r\n                msg,\r\n                category\r\n            }\r\n        });\r\n\r\n        setTimeout(()=> {\r\n            dispatch({\r\n                type: HIDE_ALERT\r\n            })\r\n        }, 5000);\r\n    }\r\n\r\n    return(\r\n        <alertContext.Provider\r\n        value = {{\r\n            alert: state.alert,\r\n            showAlert\r\n        }}\r\n        >\r\n            {props.children}\r\n        </alertContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertState;","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport { isLogin } from '../utils/simpleLogin';\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n\r\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (loading || isAuthenticated || isLogin() === true) {\r\n      return;\r\n    }\r\n    const fn = async () => {\r\n      await loginWithRedirect({\r\n        appState: {targetUrl: window.location.pathname}\r\n      });\r\n    };\r\n    fn();\r\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n  const render = props =>\r\n    isAuthenticated === true || isLogin() ? <Component {...props} /> : null;\r\n\r\n  return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;","import React, { Fragment } from 'react';\r\nimport { HashRouter, Router, Switch, Route} from 'react-router-dom';\r\nimport { useAuth0 } from \"./react-auth0-spa\";\r\n// Components\r\nimport Me from './Components/me/Me';\r\nimport SignIn from './Components/auth/SignIn';\r\nimport SignUp from './Components/auth/SignUp';\r\n\r\nimport AlertState from './context/alerts/alertState';\r\nimport history from \"./utils/history\";\r\n\r\nimport PrivateRoute from \"./Components/PrivateRoute\";\r\n\r\nfunction App() {\r\n\r\n  const { loading } = useAuth0();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <HashRouter basename='/'>\r\n    <Fragment>\r\n      <AlertState>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path='/buildTest' component={SignIn}/>\r\n          <Route path='/signup' component={SignUp}/>\r\n          <PrivateRoute path='/me/:component' component={Me}/>\r\n        </Switch>\r\n      </Router>\r\n      </AlertState>\r\n    </Fragment>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\n\r\nimport config from \"./auth_config.json\";\r\nimport history from \"./utils/history\";\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    redirect_uri={window.location.origin}\r\n    onRedirectCallback={onRedirectCallback}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}